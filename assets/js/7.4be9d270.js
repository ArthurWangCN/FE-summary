(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{185:function(_,v,t){"use strict";t.r(v);var o=t(6),e=Object(o.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"一、html、web综合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、html、web综合"}},[_._v("#")]),_._v(" 一、HTML、web综合")]),_._v(" "),t("h2",{attrs:{id:"_1、浏览器输入url到显示页面的步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、浏览器输入url到显示页面的步骤"}},[_._v("#")]),_._v(" 1、浏览器输入url到显示页面的步骤")]),_._v(" "),t("h3",{attrs:{id:"详细版"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#详细版"}},[_._v("#")]),_._v(" 详细版")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("在浏览器地址栏输入URL")])]),_._v(" "),t("li",[t("p",[_._v("浏览器"),t("strong",[_._v("查看缓存")]),_._v("，如果请求资源在缓存中并且新鲜，跳转到转码步骤")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("如果资源未缓存，发起新请求")])]),_._v(" "),t("li",[t("p",[_._v("如果已缓存，检验是否足够新鲜，足够新鲜直接提供给客户端，否则与服务器进行验证。")])]),_._v(" "),t("li",[t("p",[_._v("检验新鲜通常有两个HTTP头进行控制 "),t("code",[_._v("Expires")]),_._v("  和 "),t("code",[_._v("Cache-Control")]),_._v(" :")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("HTTP1.0提供Expires，值为一个绝对时间表示缓存新鲜日期；")])]),_._v(" "),t("li",[t("p",[_._v("HTTP1.1增加了Cache-Control: max-age=,值为以秒为单位的最大新鲜时间；")])])])])])]),_._v(" "),t("li",[t("p",[_._v("浏览器"),t("strong",[_._v("解析URL")]),_._v("获取协议，主机，端口，path")])]),_._v(" "),t("li",[t("p",[_._v("浏览器"),t("strong",[_._v("组装一个HTTP（GET）请求报文")])])]),_._v(" "),t("li",[t("p",[_._v("浏览器获取主机ip地址，过程如下：浏览器缓存 >> 本机缓存 >> hosts文件 >> 路由器缓存 >> ISP DNS缓存 >> DNS递归查询（可能存在负载均衡导致每次IP不一样）")])]),_._v(" "),t("li",[t("p",[_._v("打开一个socket与目标IP地址，端口建立TCP链接，三次握手如下：")]),_._v(" "),t("p",[_._v("①客户端发送一个TCP的"),t("strong",[_._v("SYN=1，Seq=X")]),_._v("的包到服务器端口；②服务器发回"),t("strong",[_._v("SYN=1， ACK=X+1， Seq=Y")]),_._v("的响应包；③客户端发送"),t("strong",[_._v("ACK=Y+1， Seq=Z")]),_._v("；")])]),_._v(" "),t("li",[t("p",[_._v("TCP链接建立后"),t("strong",[_._v("发送HTTP请求")])])]),_._v(" "),t("li",[t("p",[_._v("服务器接受请求并解析，将请求转发到服务程序，如虚拟主机使用HTTP Host头部判断请求的服务程序")])]),_._v(" "),t("li",[t("p",[_._v("服务器检查"),t("strong",[_._v("HTTP请求头是否包含缓存验证信息")]),_._v("如果验证缓存新鲜，返回"),t("strong",[_._v("304")]),_._v("等对应状态码")])]),_._v(" "),t("li",[t("p",[_._v("处理程序读取完整请求并准备HTTP响应，可能需要查询数据库等操作")])]),_._v(" "),t("li",[t("p",[_._v("服务器将"),t("strong",[_._v("响应报文通过TCP连接发送回浏览器")])])]),_._v(" "),t("li",[t("p",[_._v("浏览器接收HTTP响应，然后根据情况选择关闭TCP连接或者保留重用，关闭TCP连接的四次握手如下：")]),_._v(" "),t("ul",[t("li",[_._v("主动方发送"),t("strong",[_._v("Fin=1， Ack=Z， Seq= X")]),_._v("报文")]),_._v(" "),t("li",[_._v("被动方发送"),t("strong",[_._v("ACK=X+1， Seq=Z")]),_._v("报文")]),_._v(" "),t("li",[_._v("被动方发送"),t("strong",[_._v("Fin=1， ACK=X， Seq=Y")]),_._v("报文")]),_._v(" "),t("li",[_._v("主动方发送"),t("strong",[_._v("ACK=Y， Seq=X")]),_._v("报文")])])]),_._v(" "),t("li",[t("p",[_._v("浏览器检查响应状态吗：是否为1XX，3XX， 4XX， 5XX，这些情况处理与2XX不同")])]),_._v(" "),t("li",[t("p",[_._v("如果资源可缓存，"),t("strong",[_._v("进行缓存")])])]),_._v(" "),t("li",[t("p",[_._v("对响应进行"),t("strong",[_._v("解码")]),_._v("（例如gzip压缩）")])]),_._v(" "),t("li",[t("p",[_._v("根据资源类型决定如何处理（假设资源为HTML文档）")])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("解析HTML文档，构件DOM树，下载资源，构造CSSOM树，执行js脚本")]),_._v("，这些操作没有严格的先后顺序，以下分别解释")])]),_._v(" "),t("li",[t("p",[_._v("构建DOM树：")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("Tokenizing")]),_._v("：根据HTML规范将字符流解析为标记")]),_._v(" "),t("li",[t("strong",[_._v("Lexing")]),_._v("：词法分析将标记转换为对象并定义属性和规则")]),_._v(" "),t("li",[t("strong",[_._v("DOM construction")]),_._v("：根据HTML标记关系将对象组成DOM树")])])]),_._v(" "),t("li",[t("p",[_._v("解析过程中遇到图片、样式表、js文件，"),t("strong",[_._v("启动下载")])])]),_._v(" "),t("li",[t("p",[_._v("构建CSSOM树：")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("Tokenizing")]),_._v("：字符流转换为标记流")]),_._v(" "),t("li",[t("strong",[_._v("Node")]),_._v("：根据标记创建节点")]),_._v(" "),t("li",[t("strong",[_._v("CSSOM")]),_._v("：节点创建CSSOM树")])])]),_._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction",target:"_blank",rel:"noopener noreferrer"}},[_._v("根据DOM树和CSSOM树构建渲染树"),t("OutboundLink")],1),_._v(":")]),_._v(" "),t("ol",[t("li",[_._v("从DOM树的根节点遍历所有"),t("strong",[_._v("可见节点")]),_._v("，不可见节点包括：1）"),t("code",[_._v("script")]),_._v(","),t("code",[_._v("meta")]),_._v("这样本身不可见的标签。2)被css隐藏的节点，如"),t("code",[_._v("display: none")])]),_._v(" "),t("li",[_._v("对每一个可见节点，找到恰当的CSSOM规则并应用")]),_._v(" "),t("li",[_._v("发布可视节点的内容和计算样式")])])]),_._v(" "),t("li",[t("p",[_._v("js解析如下：")]),_._v(" "),t("ol",[t("li",[_._v("浏览器创建Document对象并解析HTML，将解析到的元素和文本节点添加到文档中，此时"),t("strong",[_._v("document.readystate为loading")])]),_._v(" "),t("li",[_._v("HTML解析器遇到"),t("strong",[_._v("没有async和defer的script时")]),_._v("，将他们添加到文档中，然后执行行内或外部脚本。这些脚本会同步执行，并且在脚本下载和执行时解析器会暂停。这样就可以用document.write()把文本插入到输入流中。"),t("strong",[_._v("同步脚本经常简单定义函数和注册事件处理程序，他们可以遍历和操作script和他们之前的文档内容")])]),_._v(" "),t("li",[_._v("当解析器遇到设置了"),t("strong",[_._v("async")]),_._v("属性的script时，开始下载脚本并继续解析文档。脚本会在它"),t("strong",[_._v("下载完成后尽快执行")]),_._v("，但是"),t("strong",[_._v("解析器不会停下来等它下载")]),_._v("。异步脚本"),t("strong",[_._v("禁止使用document.write()")]),_._v("，它们可以访问自己script和之前的文档元素")]),_._v(" "),t("li",[_._v("当文档完成解析，document.readState变成interactive")]),_._v(" "),t("li",[_._v("所有"),t("strong",[_._v("defer")]),_._v("脚本会"),t("strong",[_._v("按照在文档出现的顺序执行")]),_._v("，延迟脚本"),t("strong",[_._v("能访问完整文档树")]),_._v("，禁止使用document.write()")]),_._v(" "),t("li",[_._v("浏览器"),t("strong",[_._v("在Document对象上触发DOMContentLoaded事件")])]),_._v(" "),t("li",[_._v("此时文档完全解析完成，浏览器可能还在等待如图片等内容加载，等这些"),t("strong",[_._v("内容完成载入并且所有异步脚本完成载入和执行")]),_._v("，document.readState变为complete，window触发load事件")])])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("显示页面")]),_._v("（HTML解析过程中会逐步显示页面）")])])]),_._v(" "),t("h3",{attrs:{id:"详细简版"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#详细简版"}},[_._v("#")]),_._v(" 详细简版")]),_._v(" "),t("ol",[t("li",[_._v("从浏览器接收"),t("code",[_._v("url")]),_._v("到开启网络请求线程（这一部分可以展开浏览器的机制以及进程与线程之间的关系）")]),_._v(" "),t("li",[_._v("开启网络线程到发出一个完整的"),t("code",[_._v("HTTP")]),_._v("请求（这一部分涉及到dns查询，"),t("code",[_._v("TCP/IP")]),_._v("请求，五层因特网协议栈等知识）")]),_._v(" "),t("li",[_._v("从服务器接收到请求到对应后台接收到请求（这一部分可能涉及到负载均衡，安全拦截以及后台内部的处理等等）")]),_._v(" "),t("li",[_._v("后台和前台的"),t("code",[_._v("HTTP")]),_._v("交互（这一部分包括"),t("code",[_._v("HTTP")]),_._v("头部、响应码、报文结构、"),t("code",[_._v("cookie")]),_._v("等知识，可以提下静态资源的"),t("code",[_._v("cookie")]),_._v("优化，以及编码解码，如"),t("code",[_._v("gzip")]),_._v("压缩等）")]),_._v(" "),t("li",[_._v("单独拎出来的缓存问题，"),t("code",[_._v("HTTP")]),_._v("的缓存（这部分包括http缓存头部，"),t("code",[_._v("ETag")]),_._v("，"),t("code",[_._v("catch-control")]),_._v("等）")]),_._v(" "),t("li",[_._v("浏览器接收到"),t("code",[_._v("HTTP")]),_._v("数据包后的解析流程（解析"),t("code",[_._v("html")]),_._v("-词法分析然后解析成"),t("code",[_._v("dom")]),_._v("树、解析"),t("code",[_._v("css")]),_._v("生成"),t("code",[_._v("css")]),_._v("规则树、合并成"),t("code",[_._v("render")]),_._v("树，然后"),t("code",[_._v("layout")]),_._v("、"),t("code",[_._v("painting")]),_._v("渲染、复合图层的合成、"),t("code",[_._v("GPU")]),_._v("绘制、外链资源的处理、"),t("code",[_._v("loaded")]),_._v("和"),t("code",[_._v("DOMContentLoaded")]),_._v("等）")]),_._v(" "),t("li",[t("code",[_._v("CSS")]),_._v("的可视化格式模型（元素的渲染规则，如包含块，控制框，"),t("code",[_._v("BFC")]),_._v("，"),t("code",[_._v("IFC")]),_._v("等概念）")]),_._v(" "),t("li",[t("code",[_._v("JS")]),_._v("引擎解析过程（"),t("code",[_._v("JS")]),_._v("的解释阶段，预处理阶段，执行阶段生成执行上下文，"),t("code",[_._v("VO")]),_._v("，作用域链、回收机制等等）")]),_._v(" "),t("li",[_._v("其它（可以拓展不同的知识模块，如跨域，web安全，"),t("code",[_._v("hybrid")]),_._v("模式等等内容）")])])])}),[],!1,null,null,null);v.default=e.exports}}]);